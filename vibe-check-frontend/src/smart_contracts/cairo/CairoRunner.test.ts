import { expect, test } from "bun:test";
import runnerInit, { wasm_cairo_run } from "./runner-pkg/cairo_runner.js";
import erc20Sierra from "./programs/smile-token-sierra.json";
import smileSierra from "./programs/smile-sierra.json";
import { hashBalance } from "./CairoHash.js";
import { computeErc20Args } from "./CairoRunner.js";

const erc20Args = {
    balances: [
        {
            name: "faucet",
            amount: 999999,
        },
        {
            name: "ae0e5100ea7d28905ce690194c0717cd93756a20.ecdsa_secp256r1",
            amount: 1,
        },
    ],
    amount: 1000,
    from: "faucet",
    to: "c59b18d3bdaccb4d689048559a9bb6e8265293bf.ecdsa_secp256r1",
};

const smileArgs =


test("hashBalanceGenesisState", () => {
    expect(hashBalance([{ name: "faucet", amount: 1000000 }])).toEqual(
        "712283419138572991963600362117880041447189344350653266109245321471516704496",
    );
});

test("hashBalanceWithShortNames", () => {
    expect(
        hashBalance([
            { name: "bob", amount: 100 },
            { name: "alice", amount: 0 },
        ]),
    ).toEqual("2553248914692030785942303172119107100577416932040888712016243391667211221779");
});

test("hashBalanceWithLongNames", () => {
    expect(
        hashBalance([
            { name: "faucet", amount: 999999 },
            { name: "ea52d6459ddcb891e08001321246dbc7bdcd9d01.ecdsa_secp256r1", amount: 1 },
        ]),
    ).toEqual("802132474092543607147321308332300047661392663766327111661533130755281240521");
});

test("parse cairo args", () => {
    expect(
        computeErc20Args({
            balances: [
                { name: "faucet", amount: 1000000 },
            ],
            amount: 100,
            from: "faucet",
            to: "c59b18d3bdaccb4d689048559a9bb6e8265293bf.ecdsa_secp256r1",
        }),
    ).toEqual(
        "[1 0 112568767309172 6 1000000 8 0 112568767309172 6 1 175285199027252607942330356499331179285261039416457052358062226228862137957 352748885689853111792340362419153546690909839254974950175281 25 100]",
        //      bob              alice              from(bob)    to(max)                          initial state
    );
});

test("CairoERC20Runner", async () => {
    await runnerInit();
    const args = computeErc20Args(erc20Args);
    expect(args).toEqual(
        "[2 0 112568767309172 6 999999 1 172082546400392586503321564013315443437272069642000178486097778721139275619 629112714957187370486706980944031096940330347162406298743345 25 1 1000 0 112568767309172 6 1 175285199027252607942330356499331179285261039416457052358062226228862137957 352748885689853111792340362419153546690909839254974950175281 25 2831912719953807781384198442703907171559331656188090552995826225667240275554]",
    );
    const { trace, memory, output } = wasm_cairo_run(JSON.stringify(erc20Sierra), args);
    expect(trace.length).toEqual(3145728);
    expect(memory.length).toEqual(240400);
    expect(output).toEqual(
        "[1 2831912719953807781384198442703907171559331656188090552995826225667240275554 821437474560069410818607312792617211384461751521236926274368999079072185639 1 175285199027252607942330356499331179285261039416457052358062226228862137957 352748885689853111792340362419153546690909839254974950175281 25 0 0 112568767309172 6 1 175285199027252607942330356499331179285261039416457052358062226228862137957 352748885689853111792340362419153546690909839254974950175281 25 1000]",
    );
});

import proverInit, { wasm_prove } from "./cairo-backend/prover-pkg/cairo_verifier.js";
test("CairoSmileRunner", async () => {
    await runnerInit();
    const { trace, memory, output } = wasm_cairo_run(JSON.stringify(smileSierra), smileArgs);
    expect(trace.length).toEqual(6291456);
    expect(memory.length).toEqual(5777760);
    expect(output).toEqual("[1 31102 31102 0 0 0 0 0 0 0 134279]");
    await proverInit();
    // wasm_prove(new Uint8Array(trace), new Uint8Array(memory), output);
});
